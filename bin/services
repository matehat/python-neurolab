#!/usr/bin/env python

from argparse import ArgumentParser
from os.path import expanduser, join, abspath, exists, split
from os import makedirs, system, unlink, environ

bindir = split(abspath(__file__))[0]
parser = ArgumentParser(
    """
    Interact with the host operating system to integrate NeuroLab services.
    N.B. It is compatible with Mac OS X and Unix-type system running runit.
    """
)

parser.add_argument('-r', '--runit', dest="platform", action="store_const", const='runit',
    help="Specify to interact with runit.")
parser.add_argument('-l', '--launchd', dest="platform", action="store_const", const='launchd',
    help="Specify to interact with Mac OS X's launchd system.")

parser.add_argument('-s', '--start', dest="actions", action="append_const", const='start',
    help='Start the specified service')
parser.add_argument('-i', '--install', dest="actions", action="append_const", const='install',
    help='Install the specified service')
parser.add_argument('-u', '--uninstall', dest="actions", action="append_const", const='uninstall',
    help='Uninstall the specified service')
parser.add_argument('-S', '--stop', dest="actions", action="append_const", const='stop',
    help='Stop the specified service')
parser.add_argument('-R', '--restart', dest="actions", action="append_const", const='restart',
    help='Restart the specified service')

parser.add_argument('services', nargs='+', choices=('db', 'httpd', 'workers'),
    help='Services to act on.')

opts = parser.parse_args()

if opts.platform == 'launchd':
    services = expanduser("~/Library/LaunchAgents")
    if not exists(services):
        makedirs(services)
    
    def delete_launchd(name):
        service = join(services, 'org.neurolab.%s.plist' % name)
        stop_launchd(name)
        if exists(service):
            unlink(service)
    
    def create_launchd(name):
        from plistlib import writePlist
        serv = dict(
            EnvironmentVariables = dict(environ),
            Label = 'org.neurolab.%s' % name,
            ProgramArguments = [join(bindir, "%s" % name)],
            RunAtLoad = True,
            KeepAlive = True
        )
        service = join(services, 'org.neurolab.%s.plist' % name)
        delete_launchd(name)
        
        f = open(service, 'w+')
        writePlist(serv, f)
        f.close()
    
    def start_launchd(name):
        service = join(services, 'org.neurolab.%s.plist' % name)
        if exists(service):
            system("launchctl load %s" % service)
    
    def stop_launchd(name):
        service = join(services, 'org.neurolab.%s.plist' % name)
        if exists(service):
            system("launchctl unload %s" % service)
    
    
    if 'uninstall' in opts.actions:
        map(delete_launchd, opts.services)
    if 'install' in opts.actions:
        map(create_launchd, opts.services)
    if 'start' in opts.actions:
        map(start_launchd, opts.services)
    if 'stop' in opts.actions:
        map(stop_launchd, opts.services)
    if 'restart' in opts.actions:
        map(stop_launchd, opts.services)
        map(start_launchd, opts.services)
    
elif opts.platform == 'runit':
    repos = '/etc/sv'
    services = '/etc/service'
