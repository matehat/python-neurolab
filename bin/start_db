#!/usr/bin/env python
import subprocess, signal, os, sys
from os.path import join, abspath, exists, split

# Probing setup

_bin = split(abspath(__file__))[0]

if 'NEUROLAB_PATH' in os.environ:
    basedir = os.environ['NEUROLAB_PATH']
else:
    basedir = split(_bin)[0]

if basedir not in sys.path:
    sys.path.append(basedir)

try:
    import config
except ImportError:
    print "Could not import "

if 'NEUROLAB_DB_PATH' in os.environ:
    dbdir = os.environ['NEUROLAB_DB_PATH']
else:
    dbdir = join(basedir, 'db')

# Remove lock on mongodb instance
_lock = join(dbdir, 'mongod.lock')
if exists(_lock):
    print "Removing lock (bad shutdown)"
    os.unlink(_lock)

# Start mongo process
p = subprocess.Popen(['mongod', 'run',
    '--logpath', join(dbdir, 'log'), 
    '--dbpath', dbdir,
    '--port', str(config.MONGO_PORT)],
    stderr=subprocess.STDOUT)

def handle(sig, frame):
    p.send_signal(sig)

for sig in ('SIGHUP', 'SIGINT', 'SIGABRT',
            'SIGQUIT', 'SIGTERM', 'SIGTSTP'):
    try:
        signal.signal(getattr(signal, sig), handle)
    except ValueError: # Handle windows ignorance of some signals
        continue

p.wait()